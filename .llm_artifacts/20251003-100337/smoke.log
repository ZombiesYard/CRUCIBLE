D.INCOMING_INTERSECTION: 'incoming_intersection'>, <TrafficLightFormulaID.UNIQUE_STATE_IN_CYCLE: 'unique_state_in_cycle'>, <TrafficSignFormulaID.GIVEN_ADDITIONAL_VALUE: 'given_additional_value'>, <LaneletFormulaID.POLYLINES_LEFT_SAME_DIR_PARALLEL_ADJ: 'polylines_left_same_dir_parallel_adj'>, <LaneletFormulaID.POLYLINES_RIGHT_OPPOSITE_DIR_PARALLEL_ADJ: 'polylines_right_opposite_dir_parallel_adj'>, <LaneletFormulaID.STOP_LINE_POINTS_ON_POLYLINES: 'stop_line_points_on_polylines'>, <TrafficLightFormulaID.NON_ZERO_DURATION: 'non_zero_duration'>, <LaneletFormulaID.CONNECTIONS_SUCCESSOR: 'connections_successor'>, <LaneletFormulaID.INCLUDED_STOP_LINE_TRAFFIC_LIGHTS: 'included_stop_line_traffic_lights'>, <LaneletFormulaID.CONNECTIONS_LEFT_MERGING: 'connections_left_merging_adj'>, <LaneletFormulaID.POLYLINES_LEFT_OPPOSITE_DIR_PARALLEL_ADJ: 'polylines_left_opposite_dir_parallel_adj'>, <LaneletFormulaID.ZERO_OR_TWO_POINTS_STOP_LINE: 'zero_or_two_points_stop_line'>, <LaneletFormulaID.CONNECTIONS_PREDECESSOR: 'connections_predecessor'>, <LaneletFormulaID.CONNECTIONS_LEFT_FORKING: 'connections_left_forking_adj'>, <LaneletFormulaID.LANELET_TYPES_COMBINATION: 'lanelet_types_combination'>, <LaneletFormulaID.POLYLINES_RIGHT_SAME_DIR_PARALLEL_ADJ: 'polylines_right_same_dir_parallel_adj'>], excluded_formulas=[], formula_manager=<crdesigner.verification_repairing.verification.hol.formula_manager.FormulaManager object at 0x74b4c43e4970>, max_iterations=5, num_threads=1, connection_thresh=1e-08, border_thresh=1e-06, potential_connection_thresh=0.001, potential_border_thresh=0.001, buffer_size=10.0), partitioning=PartitioningParams(partitioned=False, lanelet_chunk_size=30, traffic_sign_chunk_size=5, traffic_light_chunk_size=5, intersection_chunk_size=2), evaluation=EvaluationParams(overwrite_scenario=False, invalid_states_draw_dir=None, draw_intermediate_errors=False, draw_final_result=True, file_format='png', partition_draw_dir=None, partitioned=False)), map_verification_result=MapVerificationResult(verification_time=12.63926100730896, repairing_time=0.0, invalid_states=[InvalidState(formula=<LaneletFormulaID.POTENTIAL_LEFT_OPPOSITE_DIR_PARALLEL_ADJ: 'potential_left_opposite_dir_parallel_adj'>, element_ids=[18, 11]), InvalidState(formula=<LaneletFormulaID.MIN_VERTICAL_CLEARANCE: 'min_vertical_clearance'>, element_ids=[19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23]), InvalidState(formula=<LaneletFormulaID.CONNECTIONS_PREDECESSOR: 'connections_predecessor'>, element_ids=[19, 6, 3, 7, 21, 25, 26, 27, 11, 4, 9, 16, 14, 8, 12]), InvalidState(formula=<LaneletFormulaID.CONNECTIONS_SUCCESSOR: 'connections_successor'>, element_ids=[13, 13, 3, 7, 20, 10, 22, 18, 9, 16, 14, 2, 2, 15, 15])]))])

INFO:root:Validating map ZAM_MUC-1.
/home/yu/.cache/pypoetry/virtualenvs/commonroad-scenario-designer-ORgy8xcx-py3.10/lib/python3.10/site-packages/commonroad/scenario/intersection.py:206: UserWarning: Inequality between Intersection Intersection(intersection_id=36, incomings=[IntersectionIncomingElement(incoming_id=32, incoming_lanelets={10, 13}, successors_right={7}, successors_straight={11, 14}, successors_left=set(), left_of=None), IntersectionIncomingElement(incoming_id=33, incoming_lanelets={13}, successors_right={7}, successors_straight={14}, successors_left=set(), left_of=None), IntersectionIncomingElement(incoming_id=34, incoming_lanelets={24, 28}, successors_right=set(), successors_straight={18, 20}, successors_left=set(), left_of=None), IntersectionIncomingElement(incoming_id=35, incoming_lanelets={28}, successors_right=set(), successors_straight={20}, successors_left=set(), left_of=None)], crossings=set()) and different type <class 'commonroad.scenario.lanelet.Lanelet'>
  warnings.warn(f"Inequality between Intersection {repr(self)} and different type {type(other)}")
/home/yu/.cache/pypoetry/virtualenvs/commonroad-scenario-designer-ORgy8xcx-py3.10/lib/python3.10/site-packages/commonroad/scenario/intersection.py:206: UserWarning: Inequality between Intersection Intersection(intersection_id=36, incomings=[IntersectionIncomingElement(incoming_id=32, incoming_lanelets={10, 13}, successors_right={7}, successors_straight={11, 14}, successors_left=set(), left_of=None), IntersectionIncomingElement(incoming_id=33, incoming_lanelets={13}, successors_right={7}, successors_straight={14}, successors_left=set(), left_of=None), IntersectionIncomingElement(incoming_id=34, incoming_lanelets={24, 28}, successors_right=set(), successors_straight={18, 20}, successors_left=set(), left_of=None), IntersectionIncomingElement(incoming_id=35, incoming_lanelets={28}, successors_right=set(), successors_straight={20}, successors_left=set(), left_of=None)], crossings=set()) and different type <class 'commonroad.scenario.traffic_sign.TrafficSign'>
  warnings.warn(f"Inequality between Intersection {repr(self)} and different type {type(other)}")
INFO:root:Validating map ZAM_MUC-1 finished.
